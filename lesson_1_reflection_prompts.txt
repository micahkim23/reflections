How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Bugs are where there are differences between the old file (that was working) and the new file (that was not working).

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can access earlier, working versions of the same program.
    
What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manually committing allows for more flexibility from the programmer. This is because the programmer gets to make the call on what a reasonable commit is.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    The multiple files could be inter related, so a change to one file will affect the other files.

How can you use the commands git log and git diff to view the history of files?

    Git log lists all the commits. Git diff compares two commits.

How might using version control make you more confident to make changes that
could break something?

    Your previous changes are saved, so even if you break something, you can go back to a working version.

Now that you have your workspace set up, what do you want to try using Git for?

   To save changes to my program in commits. To debug programs.
